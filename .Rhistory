#| output: false
library(tidyverse)
library(viridis)
library(patchwork)
library(gghighlight)
# Chunk 2
#| code-fold: false
# Create and sample random dates
Datesx <- seq.Date(from = as.Date("2014-01-01"), to = Sys.Date(), by = 1)
set.seed(123)
DatesDossiers <- sample(Datesx, size = 400, replace = TRUE)
DatesDossiers <- sort(DatesDossiers, decreasing = FALSE)
# Create sectors and regions (categorical)
secteurs <- sample(x = c("air", "space", "land", "sea", "ground", "radio"), size = 400, replace = TRUE, prob=c(0.1, 0.2, 0.30, 0.2, 0.1, 0.2))
regions <- sample(x = c("NAM", "LATAM", "EMEA", "APAC", "AUS"), size = 400, replace = TRUE, prob=c(0.1, 0.2, 0.40, 0.2, 0.1))
# Create deal sizes and revenues (numeric)
dealsize <- sample(1:1000, size = 400, replace = TRUE)
revenues <- round(rnorm(400, 20, 5)^2, 0)
# Chunk 3
#| code-fold: false
# create tibbles by combining vectors
evolution <-
tibble(DatesDossiers, secteurs, regions, dealsize, revenues)
#convert as character variables to factors
evolution <-
evolution %>%
mutate_if(sapply(evolution, is.character), as.factor) %>%
print()
#filter year
evolution <-
evolution %>%
filter(DatesDossiers > "2015-01-01", DatesDossiers < "2023-01-01")
# Chunk 4
#| code-fold: false
theme_set(theme_minimal())
# Chunk 5
a <-
evolution %>%
ggplot(mapping = aes(x = fct_rev(fct_infreq(secteurs)))) +
geom_bar() +
geom_text(aes(label = after_stat(count)), stat = "count", vjust = 2.5, colour = "white") + #add labels
labs(x = "Sectors",
title = "Number of deals by sector")
a
# Chunk 6
b <-
evolution %>%
count(secteurs) %>%
mutate(prop = (n/sum(n))) %>%
ggplot(mapping = aes(x = fct_reorder(secteurs, prop), y = prop)) +
geom_col(fill = "red3") +
coord_flip() +
gghighlight(secteurs == "radio") +
geom_text(aes(label = paste0(round(prop*100,2), "%")),
vjust = .5,
hjust = 1.2,
size = 4,
color = "white") + #add labels
scale_y_continuous(labels = scales::percent) + # axis label in %
labs(x = "Sectors",
title = "Proportion of deals by sector",
subtitle = "By number of deals") #relabel x axis
b
# Chunk 7
e <-
evolution %>%
ggplot(mapping = aes(x=secteurs, fill = regions)) +
geom_bar(position = "fill")
e
# Chunk 8
evolution %>%
ggplot(mapping = aes(x=fct_infreq(secteurs), fill = fct_infreq(regions))) +
geom_bar(position = "dodge", color = "white")
# Chunk 9
#create base data
evolutioncount <-
evolution %>%
group_by(year = year(DatesDossiers)) %>%
count(secteurs) %>%
mutate(year = year, n = n)
#create highlight data
evolutioncount.filt <-
evolution %>%
filter(secteurs == "radio") %>% # with filter
group_by(year = year(DatesDossiers)) %>%
count(secteurs) %>%
mutate(year = year, n = n)
#plot base and highlight data on top of each other
acount <-
ggplot(data = evolutioncount, aes(x = year, y = n)) +
geom_col(fill = "red3") +
geom_text(evolutioncount.filt, mapping = aes(label = n), vjust = -0.8, color = "red3") +
gghighlight(secteurs == "radio")
acount
# Chunk 10
#Data
change.roll.avg <-
evolutioncount.filt %>%
ungroup() %>% #important de ungroup
mutate(lag0 = n,
lag1 = lag(lag0),
yoy.change = (lag0 - lag1),
yoy.changeperc = ((lag0/lag1-1)*100)
) %>%
mutate(yoy.changeperc = round(yoy.changeperc, 1))
#Plots
change1 <-
change.roll.avg %>%
select(year, yoy.change, yoy.changeperc) %>%
filter(!is.na(yoy.change)) %>%
ggplot(aes(x = year, y = yoy.change)) +
geom_col(aes(fill = yoy.change > 0)) + # conditional formatting with > 0
geom_text(aes(label = yoy.change, y = yoy.change -0.5 * sign(yoy.change)), color = "white", fontface = "bold") + # data labels, use sign() to fit diverging labels, see : https://tinyurl.com/z5n7uk5k or https://tinyurl.com/3uakpz7y
labs(x = NULL) + # remove x axis title
scale_x_continuous(labels = NULL) + # remove x axis tick labels
scale_fill_manual(values = c("#c9191e", "#27a658" )) +
theme(legend.position = "none")  #  remove legend of col chart
change2 <-
change.roll.avg %>%
select(year, yoy.change, yoy.changeperc) %>%
filter(!is.na(yoy.changeperc)) %>%
ggplot(aes(x = year, y = yoy.changeperc)) +
geom_hline(aes(yintercept = 0), color = "gray", linetype = "dashed") + #highlight x axis
geom_line(color = "blue4") +
labs(x = NULL)
(change1 / change2) + plot_layout(ncol = 1, heights = c(2.5, 1))
# Resources :
# https://tinyurl.com/23yh29hu
# Chunk 11
f <-
evolution %>%
group_by(secteurs) %>%
arrange(DatesDossiers) %>%
mutate(count = row_number()) %>%
ggplot(mapping = aes(x = DatesDossiers, y = count, color = secteurs)) +
geom_line(linewidth = 0.8)
f
# Chunk 12
#create main lines (will be in grey)
evolutionmain <-
evolution %>%
group_by(secteurs) %>%
arrange(DatesDossiers) %>%
mutate(evol = cumsum(dealsize))
#create the highlighted line (will be in red)
evolutionfilt <- evolutionmain %>%
filter(secteurs == "radio")
#plot
i <- ggplot(data = evolutionmain, mapping = aes(x = DatesDossiers, y = evol, group = secteurs)) +
geom_line(linewidth = 0.8, color = "gray85") + #main lines in gray
geom_line(data = evolutionfilt, linewidth = 0.8, color = "red") + #highlight line in red
#add a dot at max value of line (max value of evol)
geom_point(data = evolutionfilt %>% filter(evolutionfilt$evol == max(evol)), color = "red", size = 2) +
#add text label to end of line
geom_text(data = evolutionfilt %>% filter(DatesDossiers == last(DatesDossiers)), mapping = aes(label = secteurs), color = "red", hjust = -0.2, vjust = 0.1) +
# Allow labels to bleed past the canvas boundaries
coord_cartesian(clip = 'off')
i
# Chunk 13
#| message: false
i2 <-
i +
geom_smooth(group = 1, color = "black", linetype = "dashed", linewidth = 0.4, se = FALSE) +
labs(title = "Valeur cumulée")
i2
# Chunk 14
#| message: false
evolutionstacked <-
evolution %>%
mutate(year = year(DatesDossiers)) %>% #get year name
group_by(year, secteurs) %>%
summarise(n = length(DatesDossiers)) %>% #get length of vectors containing DatesDossiers (a.k.a "number of dates"; for each secteurs in each year)
group_by(year) %>%
mutate(sumperyear = sum(n), prop = (n/sumperyear*100)) #sum the total number of dates per year and get prop of "each secteurs for each year" compared to total number of all secteurs in a year
evolutionstacked.filt <- evolutionstacked %>% filter(secteurs == "radio")
stacked4 <-
ggplot(data = evolutionstacked, mapping = aes(x = year, y = prop, group = secteurs)) +
geom_line(color = "gray80") +
geom_line(data = evolutionstacked.filt, color = "red3", linewidth = 1) +
geom_point(data = evolutionstacked.filt %>% filter(year == max(evolutionstacked.filt$year)), color = "red3") +
geom_text(data = evolutionstacked.filt %>% filter(year == max(evolutionstacked.filt$year)), mapping = aes(label = paste0(round(prop), "", "%"), hjust = -0.4, color = "red3", fontface = "bold")) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(0,100)) +
labs(title = "Part moyenne")
stacked4
# Chunk 15
#| warning: false
#| message: false
f +
gghighlight(secteurs == "space")
# Chunk 16
## comptage dans le temps
f +
facet_wrap(~secteurs)
# Chunk 17
#| message: false
f +
gghighlight(label_params = list(size = 3)) + #adjust size of labels
facet_wrap(~secteurs) +
theme(
strip.text.x = element_blank() #remove titles from facets
)
# Chunk 18
#| warning: false
#| message: false
f +
gghighlight(secteurs %in% c("space", "radio"), label_params = list(nudge_x = 2))
# Chunk 19
evolution %>%
group_by(secteurs) %>%
summarize(meandeal = mean(dealsize), mediandeal = median(dealsize), max = max(dealsize), min = min(dealsize), IQR = IQR(dealsize), NBdeals = n()) %>%
arrange(mediandeal)
# Chunk 20
j <-
evolution %>%
group_by(secteurs) %>%
summarise(sumdeal = sum(dealsize)) %>%
ggplot(mapping = aes(x = fct_reorder(secteurs, sumdeal), y = sumdeal)) +
geom_col() +
geom_text(aes(label = sumdeal),
vjust = 2,
size = 4,
color = "white") +
labs(x = NULL)
j +
labs(title = "Sum of deals' value per sector",
subtitle = "In USD",
x = NULL)
# Chunk 21
## Distribution des tailles de Deals
L <-
evolution %>%
ggplot(aes(x = dealsize)) +
geom_histogram(binwidth = 20)
L
# Chunk 22
## Densité des tailles de Deals par secteurs
m <-
evolution %>%
ggplot(aes(x = dealsize, fill = secteurs)) +
geom_density(alpha = 0.3) +
geom_rug(alpha = 0.6) + #partie basse du graphe
facet_wrap(~secteurs)
m
# Chunk 23
n <-
evolution %>%
group_by(secteurs) %>%
mutate(mediandeal = median(dealsize)) %>%
ggplot(mapping = aes(x = fct_reorder(secteurs, mediandeal), y = dealsize)) +
geom_boxplot() +
geom_jitter(width = 0.1, alpha = 0.4) +
labs(title = "Deal size distribution per sector",
subtitle = "In USD",
x = "Sector") +
coord_flip()
n
# Chunk 24
o <-
evolution %>%
group_by(secteurs) %>%
mutate(mediandeal = median(dealsize)) %>%
ggplot(mapping = aes(x = fct_reorder(secteurs, mediandeal), y = dealsize)) +
geom_boxplot(fill = "blue3", alpha = 0.1, color = "blue3") +
geom_jitter(aes(color = secteurs), width = 0.1, alpha = 0.4) +
labs(title = "Deal size distribution per sector",
subtitle = "In USD",
x = "Sector") +
guides(color = guide_legend(override.aes = list(size = 5))) + #increase legend items size
coord_flip()
o
# Chunk 25
# binning deal sizes
# add column named "bin" containing 3 types of dealsizes
bin <-
evolution %>%
mutate(bin = cut(evolution$dealsize, breaks = c(0,100,500,999)))
#relabeled bin
bin <-
evolution %>%
mutate(bin = cut(evolution$dealsize, breaks = c(0,100,500,999), labels = c("small < 100", "100 < medium < 500  ", "big > 500")))
# plot bins
bin %>%
ggplot(mapping = aes(x = bin)) +
geom_bar() +
geom_text(aes(label = after_stat(count)), stat = "count", vjust = 2.5, colour = "white")
# Chunk 26
# plot proportions for each bin
bin %>%
group_by(bin) %>%
summarise(sumperbin  = sum(dealsize)) %>%
mutate(tot = sum(sumperbin), prop = sumperbin/tot*100) %>% #proportion
ggplot(mapping = aes(x = bin, y = prop)) +
geom_col() +
geom_text(aes(label = round(prop)), vjust = 2.5, colour = "white")
# Chunk 27
#| message: false
p <-
bin %>%
group_by(secteurs, bin) %>%
summarise(sumdeal = sum(dealsize)) %>%
group_by(secteurs) %>%
mutate(totsecteur = sum(sumdeal)) %>%
arrange(rev(sumdeal)) %>%
mutate(pos = cumsum(sumdeal)) %>%
ggplot(mapping = aes(x = fct_reorder(secteurs, totsecteur), y = sumdeal, fill = bin)) +
geom_bar(stat="identity")
p
# Chunk 28
#| message: false
binsizestackprep <-
bin %>%
group_by(secteurs, bin) %>%
#add column summarizing total sum of deals per secteurs for each bin
summarise(sumperbin = sum(dealsize)) %>%
#get proportion
mutate(tot = sum(sumperbin), prop = sumperbin/tot*100)
#plot
binsizestack <-
binsizestackprep %>%
ggplot(aes(x = fct_reorder(secteurs, tot), y = prop, fill = fct_rev(bin))) + #use fct_rev on (bin) to reverse stacked bar order (optional...)
geom_col(position = "dodge") +
labs(x = "Sector", color = "Deal category") + #change legend name with color = ""
#need to use scale_fill_discrete, instead of scale_color_discrete to reorder legend cat
scale_fill_discrete(breaks=c("big > 500", "medium > 200" , "small < 200")) #change legend label order
binsizestack
# Chunk 29
q <-
evolution %>%
ggplot(aes(x = DatesDossiers, y = dealsize, size = (revenues/100))) +
geom_point(color= "gray", alpha = 0.5)
q
# Chunk 30
r <-
q +
geom_point(data = evolution %>% filter(evolution$secteurs == "radio"), alpha = 0.5, color = "magenta")
r
# Chunk 31
s <-
q +
geom_point(data = evolution %>% filter(evolution$dealsize > 900), alpha = 0.5, color = "red")
s
# Chunk 32
#get year, month, week
weekcount <-
evolution %>%
mutate(year = year(DatesDossiers), month = month(DatesDossiers, label = TRUE, abbr= TRUE), wk = week(DatesDossiers))
weekcount
# Chunk 33
#plot week intensity for each year with heat map with geom_tile()
weekcount %>%
group_by(year) %>%
count(wk) %>%
ggplot(aes(x = wk, y = year, fill = n)) +
geom_tile(color="white", linewidth = 0.1) + #use color and size to draw borders
coord_equal() + #draw nice squares instead of rectangles
scale_fill_viridis(name="# Deals", option = "plasma") +
theme(
panel.background = element_rect(fill = NA, color = NA), # Background of plotting area
)
# Chunk 34
#plot month intensity for each year with heat map with geom_tile()
t <-
weekcount %>%
group_by(year) %>%
count(month) %>% #change count to month
ggplot(aes(x = month, y = year, fill = n)) + #change x to month
geom_tile(color="white", linewidth = 0.1) + #use color and size to draw borders
coord_equal() + #draw nice squares instead of rectangles
theme(
panel.background = element_rect(fill = NA, color = NA)   # Background of plotting area
) +
geom_text(aes(label=n), color="grey", size=3) # adding labels
t
# Chunk 35
a + b + acount + change1 + change2 + i + stacked4 + i2 + i
# Chunk 36
(b + i2 + stacked4) + {
(change1 / change2 + plot_layout(ncol = 1, heights = c(2.5, 1)))
} +
plot_layout(ncol = 3)
# Chunk 37
((b + i2 + acount) /
(stacked4 + a + (change1 / change2))
)
a + b + acount + change1 + change2 + i + stacked4 + i2 + i
(b + i2 + stacked4) + {
(change1 / change2 + plot_layout(ncol = 1, heights = c(2.5, 1)))
} +
plot_layout(ncol = 3)
((b + i2 + acount) /
(stacked4 + a + (change1 / change2))
)
#| code-fold: false
#| output: false
((b + i2 + acount) /
(stacked4 + a + (change1 / change2))
)
#| code-fold: false
#| output: false
((b + i2 + acount) /
(stacked4 + a + (change1 / change2))
)
#plot month intensity for each year with heat map with geom_tile()
t <-
weekcount %>%
group_by(year) %>%
count(month) %>% #change count to month
ggplot(aes(x = month, y = year, fill = n)) + #change x to month
geom_tile(color="white", linewidth = 0.1) + #use color and size to draw borders
coord_equal() + #draw nice squares instead of rectangles
theme(
panel.background = element_rect(fill = NA, color = NA)   # Background of plotting area
) +
geom_text(aes(label=n), color="grey", size=3) # adding labels
t
#plot week intensity for each year with heat map with geom_tile()
weekcount %>%
group_by(year) %>%
count(wk) %>%
ggplot(aes(x = wk, y = year, fill = n)) +
geom_tile(color="white", linewidth = 0.1) + #use color and size to draw borders
coord_equal() + #draw nice squares instead of rectangles
scale_fill_viridis(name="# Deals", option = "plasma") +
theme(
panel.background = element_rect(fill = NA, color = NA), # Background of plotting area
)
#plot week intensity for each year with heat map with geom_tile()
weekcount %>%
group_by(year) %>%
count(wk) %>%
ggplot(aes(x = wk, y = year, fill = n)) +
geom_tile(color="white", linewidth = 0.1) + #use color and size to draw borders
coord_equal() + #draw nice squares instead of rectangles
scale_fill_viridis(name="# Deals", option = "plasma") +
theme(
panel.background = element_rect(fill = NA, color = NA), # Background of plotting area
)
#get year, month, week
weekcount <-
evolution %>%
mutate(year = year(DatesDossiers), month = month(DatesDossiers, label = TRUE, abbr= TRUE), wk = week(DatesDossiers))
weekcount
s <-
q +
geom_point(data = evolution %>% filter(evolution$dealsize > 900), alpha = 0.5, color = "red")
s
r <-
q +
geom_point(data = evolution %>% filter(evolution$secteurs == "radio"), alpha = 0.5, color = "magenta")
r
q <-
evolution %>%
ggplot(aes(x = DatesDossiers, y = dealsize, size = (revenues/100))) +
geom_point(color= "gray", alpha = 0.5)
q
#| code-fold: false
((b + i2 + acount) /
(stacked4 + a + (change1 / change2))
)
i2
i +
geom_smooth(group = 1, color = "black",
linetype = "dashed",
linewidth = 0.4, se = FALSE) +
geom_smooth(formula = y ~ x, method = "loess") +
labs(title = "Valeur cumulée")
i +
geom_smooth(group = 1, color = "black",
linetype = "dashed",
linewidth = 0.4, se = FALSE) +
geom_smooth(method = "loess") +
labs(title = "Valeur cumulée")
i +
geom_smooth(group = 1, color = "black",
linetype = "dashed",
linewidth = 0.4, se = FALSE) +
labs(title = "Valeur cumulée")
i +
geom_smooth(group = 1, color = "black",
linetype = "dashed",
linewidth = 0.4, se = FALSE,
method = "loess") +
labs(title = "Valeur cumulée")
i +
geom_smooth(group = 1, color = "black",
linetype = "dashed",
linewidth = 0.4, se = FALSE,
method = "loess") +
labs(title = "Valeur cumulée")
i +
geom_smooth(group = 1, color = "black",
linetype = "dashed",
linewidth = 0.4, se = FALSE,
method = "loess") +
labs(title = "Valeur cumulée")
i +
geom_smooth(group = 1, color = "black",
linetype = "dashed",
linewidth = 0.4, se = FALSE,
method = "loess",
formula = y ~ x) +
labs(title = "Valeur cumulée")
i2 <-
i +
geom_smooth(group = 1, color = "black",
linetype = "dashed",
linewidth = 0.4, se = FALSE,
method = "loess",
formula = y ~ x) +
labs(title = "Valeur cumulée")
i2
